//인체감지센서 사용o
#include <SoftwareSerial.h>
#include <Stepper.h>


const int TX = 3;
const int RX = 2;
const int echoPin = 12;                 //에코 핀 번호
const int trigPin = 13;                 //트리그 핀 번호
const int motionPin = 7;               //인체감지센서 핀 번호 
const int steps = 1024;    // 2048 한바퀴, 1024 반바퀴
const int interval = 1000;

const float firstLevel = 5.0;
const float height = 20.0;

unsigned int previousMillis = 0;

SoftwareSerial mySerial(RX, TX);
Stepper myStepper(steps,11,9,10,8); // 모터 드라이브에 연결된 핀 IN4, IN2, IN3, IN1


void setup() {
  // put your setup code here, to run once:

  Serial.begin(9600);
  mySerial.begin(9600);

  myStepper.setSpeed(25); 

  pinMode(trigPin,    OUTPUT);
  pinMode(echoPin,    INPUT);
  pinMode(motionPin,  INPUT);
}



void loop() {
  // put your main code here, to run repeatedly:
 
  float distance, level;
  int data = 0;
  
  unsigned long currentMillis = millis();

  int sensor = digitalRead(motionPin);

    
  if(currentMillis - previousMillis >= interval){
     previousMillis = currentMillis;
    
     distance = superSound();
     
     if (mySerial.available()){
        data = mySerial.parseInt();  
        Serial.print("\n data: ");
        Serial.print(data);
        level = (firstLevel + (height * (data - 1 )));

        if(level <= 0)
          level = firstLevel;

        if(data != 0){             
          upDown(distance,level);
        }
        
        if(sensor == HIGH){           //인체감지센서
          data = 2; 
          level = (firstLevel + (height * data));

          upDown(distance, level);
        }
     }
 }

  
}

//초음파센서
float superSound(){       
    float distance, duration;
    
    digitalWrite(trigPin,HIGH);
    delay(10);
    digitalWrite(trigPin,LOW);
                
    duration = pulseIn(echoPin, HIGH);
    distance = ((float)(340*duration)/10000)/2;
    
    Serial.print("\n if Distance: ");
    Serial.print(distance);
    Serial.print("\n");

    return distance;
}

//엘리베이터 상승, 하강
void upDown(float distance, float level){
    while((distance < level - 3.0) || (distance > level + 3.0)){       
          if((distance >= level - 3.0) && (distance <= level + 3.0))
            break;
            
          if(distance > level + 3.0){
            myStepper.step(-steps);
            distance = superSound();
             Serial.print("\n while Distance: ");
            Serial.print(distance);
            delay(100);     
          }
          else if(distance < level - 3.0){
            myStepper.step(steps);
            distance = superSound();
             Serial.print("\n while Distance: ");
            Serial.print(distance);
            delay(100);

          }
    }
}
